Gitの管理対象に置きたい物は明示的に指定する必要がある
・Addコマンドでファイルをステージにあげる必要がある

ワーキングディレクトリの構成
・ステージ//管理対象のファイル
・その他//管理対象でないファイル
・コミット//コミットされたデータがステージから此方に移る
//ステージ上の物を管理している


----------------------------------------------------------------------------
git --version//現在入っているgitのバージョンを確認する

git init//作業ディレクトリのみを作る場合
git init --bare --shared//リポジトリの作成(現在いるディレクトリに作成する)

git clone クローンしたいリポジトリ 場所の指定//クローンの作成
git clone ~/novel.git .
(.1つで今いる所を表す)

git status//現在の状況を{
 Untracked files//管理対象でないファイル
 Changes not staged for commit://変更がコミットされてない
 modified://gitの監視対象が更新された時に付く
 }

git add ファイル名//ステージに追加する
git add .//現在登録されてないファイル全てをステージに登録する

git commit -m 'コミットメッセージ' あげたいファイル名1 2 ...//コミットする
git commit -am'コミットメッセージ'//一括コミット
Commit//変更を確定する

git push//変更をリポジトリにあげる

git reset//ステージに上げたファイルを元に戻す(ステージから降ろす)

git diff 対象ファイル名//最後にコミットされた対象ファイルと、手元の対象ファイルの差を比較する、+がついてる行は追加した、-がついてる行は削除した

git checkout 対象ファイル名//最終コミット時の状態に戻す
git checkout コミット識別番号//コミット番号の所まで戻る

git log//更新ログを表示する{
 オレンジ色のcommitの後の文字列がコミットの識別番号

}

.gitconfigファイルにメールアドレス、名前等の情報を保存する

echo "# testrep" >> README.md//# testrepをリダイレクトでREADME.mdに書き込む
git remote add origin https://github.com/JAPseed/testrep.git//リポジトリと作業ディレクトリを関連付ける
git push -u origin master//マスターブランチに上を上げる

git pull//リポジトリの状態を自身の作業ディレクトリに反映する