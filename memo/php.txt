原則的には半角文字列と一部記号を利用する
 や改行は基本的に無視される
//,/**/,#でコメント

PHPには大文字と小文字の区別が存在しない

""内に変数を記述すると、自動的に展開してくれる
''内に変数を記述すると、展開は行われない(\n等の命令も実行されない)

文字列の連結をする場合は.を使う
例)$id."\n"
+=のような動作をする場合は=の前に.をつける
例).=

変数の宣言は$半角英数字で行う
例)$value=1;
変数の型指定を記述する必要が無い
プリミティブ型
{
integer//整数
string//文字列
boolean//真偽
}
配列を利用する場合も$半角英数字で行う
例)$value=[1,2,3]; //一括初期化
例)$value[0]=1; //代入

連想配列、hash(std::mapのような物)
例)$value =[
 "apple" => "りんご,
 "banana" => "バナナ"
];
例)$value["apple"];//連想配列の中身取り出し例

if(条件式)//条件分岐、C++の記法と同じ
例)if(1<100){
}
else if(100==100){
}
else{
}

switch
switch($foo){
 case "hoge":{
  break;
 }
 default:{
  break;
 }
}
フォールスルー//breakを書かなければ、1つ下の条件の処理も実行される

for($i=0;$i<100;$i++){
 echo "$i+1;
}

while(true){
}

演算子+-*/等他言語と同一の利用が可能
C++と違う要素
=== //型を比較対象にする(stringとintの比較はfalseになる)
==  //型を比較対象にしない(stringの"1"とintの1が同じ物として扱われ、trueになる)
!=//型無視
!==//型込み比較

順次構造//上から下へ
選択構造//条件分岐
反復構造//for等繰り返し

関数の作り方
function 関数名(引数){
処理内容
}
引数は=でデフォルト値を付けられる
例)
function error($message='エラーが発生しました'){
    echo"Error:$message\n";
    exit(1);
}

クラスの作り方
class クラス名{
  メンバ変数
  メンバ関数
}
クラス内の関数からクラス内のプロパティ(メンバ変数)にアクセスする場合は$this->変数名と書く


echo//文字列を送る(htmlに直接入力値を渡す)
{
echo date("Y-m-d H:i:s");//年月日、時間分秒を表示させる
}

var_dump(対象)//指定した対象変数の中身を表示するデバッグ用関数

rand()//0.0〜1.0までの値をランダムで出す
rand(最小値,最大値)//最小値から最大値までの値をランダムで出す(入力型基準)

$argv//外部からの入力値を受け取る配列(0にはファイル名が入っているため、自身が使うのは1から)
$argc//プログラム自体に渡ってくる値の数を表す

exit(1)//プログラムを終了する

count()//配列のサイズを調べる

is_numeric()//変数が値or値形式の文字列かを調べる

fopen(ファイル名,開くモード)//ファイルを開く、モードは、'r'読み込み専用'w'新規書き込み'a'追加書き込み、戻り値はファイルハンドル
fgets(ファイルハンドル)//ファイルから1行分取得する、読み込めなくなったらfalseを返す
fclose(ファイルハンドル)//ファイルを閉じる
fwrite(ファイルハンドル)//ファイルへの書き込み
flock(ファイルハンドル,ロック種類)// LOCK_SH(共有ロック(読み手)) LOCK_EX(排他的ロック(書き手)) LOCK_UN((共有または排他的)ロックを開放)

rtrim()//文字列から空白等の余計なデータを取り除く
explode('区切り指定文字列',対象)//文字列を区切り文字列毎に区切って配列で返す

array_push//配列の末尾に要素を追加する

CUIでphpを使う場合、htmlを介さずに直接phpの記述を行ってよい(そのファイルにphp以外の記述を行わない場合、終わりの?>は省略できる)